{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","res","data","newPerson","post","id","delete","put","Filter","filterValue","changeFilterValue","value","onChange","PersonForm","addPerson","newName","addNewName","newNub","addNewNub","onSubmit","type","Persons","persons","deletePerson","map","person","key","_id","name","number","onClick","Message","message","className","content","App","useState","setPersons","setNewName","setNewNub","setFilterValue","setMessage","useEffect","Servers","event","target","filterPersons","filter","toLocaleUpperCase","includes","preventDefault","every","concat","catch","err","response","error","window","confirm","p","find","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAEMA,EAAU,eAsBD,EApBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAkBpB,EAfA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAapB,EAVC,SAAAG,GAEZ,OADgBP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAQpB,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMS,IAAN,UAAaV,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SCjB7BM,G,MAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,kBAAhB,OACb,iDACmB,2BAAOC,MAAOF,EAAaG,SAAUF,OAIpDG,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,WAAYC,EAAnC,EAAmCA,OAAQC,EAA3C,EAA2CA,UAA3C,OACjB,0BAAMC,SAAUL,GACd,sCACQ,2BAAOH,MAAOI,EAASH,SAAUI,KAEzC,wCACU,2BAAOL,MAAOM,EAAQL,SAAUM,KAE1C,6BACE,4BAAQE,KAAK,UAAb,UAKAC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAZ,OACd,oCACGD,EAAQE,KAAI,SAAAC,GAAM,OAAI,uBAAGC,IAAKD,EAAOE,KAAMF,EAAOG,KAA5B,IAAmCH,EAAOI,OAA1C,IAAkD,4BAAQC,QAAS,kBAAMP,EAAaE,KAApC,gBAIvEM,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,IAAKA,EAAQZ,KACX,OAAO,KAGT,IAAMa,EAA6B,YAAjBD,EAAQZ,KAAqB,UAAY,QAE3D,OACE,yBAAKa,UAAWA,GACbD,EAAQE,UA4FAC,EAvFH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTd,EADS,KACAe,EADA,OAEcD,mBAAS,IAFvB,mBAETrB,EAFS,KAEAuB,EAFA,OAGYF,mBAAS,IAHrB,mBAGTnB,EAHS,KAGDsB,EAHC,OAIsBH,mBAAS,IAJ/B,mBAIT3B,EAJS,KAII+B,EAJJ,OAKcJ,mBAAS,CAAEhB,KAAM,GAAIc,QAAS,KAL5C,mBAKTF,EALS,KAKAS,EALA,KAOhBC,qBAAU,WACRC,IAAiB3C,MAAK,SAAAE,GACpB,OAAOmC,EAAWnC,QAEnB,IA+DH,OACE,6BACE,yCACA,kBAAC,EAAD,CAAS8B,QAASA,IAClB,kBAAC,EAAD,CAAQvB,YAAaA,EAAaC,kBAvBZ,SAACkC,GACzBJ,EAAeI,EAAMC,OAAOlC,OAC5B,IAAMmC,EAAgBxB,EAAQyB,QAAO,SAAAtB,GAAM,OAAIA,EAAOG,KAAKoB,oBAAoBC,SAASL,EAAMC,OAAOlC,MAAMqC,wBAC3GX,EAAWS,MAqBT,yCACA,kBAAC,EAAD,CAAYhC,UA3DE,SAAC8B,GAGjB,GAFAA,EAAMM,iBACa5B,EAAQ6B,OAAM,SAAA1B,GAAM,OAAIA,EAAOG,OAASb,KAOzD4B,EALkB,CAChBf,KAAMb,EACNc,OAAQZ,IAGgBjB,MAAK,SAAAE,GAC7BmC,EAAWf,EAAQ8B,OAAOlD,IAC1BuC,EAAW,CAAErB,KAAM,UAAWc,QAAQ,OAAD,OAASnB,QAC7CsC,OAAM,SAAAC,GAAG,OAAIb,EAAW,CAAErB,KAAM,QAASc,QAASoB,EAAIC,SAASrD,KAAKsD,gBAGvE,GADeC,OAAOC,QAAP,UAAkB3C,EAAlB,oHACH,CACV,IAAM4C,EAAIrC,EAAQsC,MAAK,SAAAnC,GAAM,OAAIA,EAAOG,OAASb,KAEjD4B,EAAegB,EAAEhC,IAAK,CAAEE,OAAQZ,IAAUjB,MAAK,SAAAE,GAC7CmC,EAAWf,EAAQE,KAAI,SAAAC,GAAM,OAAIA,EAAOE,MAAQgC,EAAEhC,IAAMzB,EAAOuB,MAC/DgB,EAAW,CAAErB,KAAM,UAAWc,QAAQ,GAAD,OAAKyB,EAAE/B,KAAP,oBAEpCyB,OAAM,SAAAC,GACLb,EAAW,CAAErB,KAAM,QAASc,QAASoB,EAAIC,SAASrD,KAAKsD,WAI/DK,YAAW,WACTpB,EAAW,CAAErB,KAAM,GAAIc,QAAS,OAC/B,KACHI,EAAW,IACXC,EAAU,KA4B0BxB,QAASA,EAASC,WAnErC,SAAC4B,GAClBN,EAAWM,EAAMC,OAAOlC,QAkEsDM,OAAQA,EAAQC,UA/D9E,SAAC0B,GACjBL,EAAUK,EAAMC,OAAOlC,UA+DrB,uCACA,kBAAC,EAAD,CAASW,QAASA,EAASC,aArBV,SAAAE,GACJgC,OAAOC,QAAP,kCAAsBjC,EAAOG,QAE1Ce,EAAgBlB,EAAOE,KAAK3B,MAAK,WAC/BqC,EAAWf,EAAQyB,QAAO,SAAAY,GAAC,OAAIA,EAAEhC,MAAQF,EAAOE,WAE/C0B,OAAM,SAAAC,GACLb,EAAW,CAAErB,KAAM,QAASc,QAAQ,UAAD,OAAYT,EAAOG,KAAnB,sCACnCS,EAAWf,EAAQyB,QAAO,SAAAY,GAAC,OAAIA,EAAEhC,MAAQF,EAAOE,gBC5G1DmC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.29cd25ff.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst destroy = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nexport default { getAll, create, destroy, update }\r\n\r\n","import React, { useState, useEffect } from 'react'\nimport Servers from './services/persons'\nimport './App.css'\n\nconst Filter = ({ filterValue, changeFilterValue }) => (\n  <div>\n    filter shown with<input value={filterValue} onChange={changeFilterValue} />\n  </div>\n)\n\nconst PersonForm = ({ addPerson, newName, addNewName, newNub, addNewNub }) => (\n  <form onSubmit={addPerson}>\n    <div>\n      name: <input value={newName} onChange={addNewName} />\n    </div>\n    <div>\n      number: <input value={newNub} onChange={addNewNub} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nconst Persons = ({ persons, deletePerson }) => (\n  <>\n    {persons.map(person => <p key={person._id}>{person.name} {person.number} <button onClick={() => deletePerson(person)} >delete</button></p>)}\n  </>\n)\n\nconst Message = ({ message }) => {\n  if (!message.type) {\n    return null\n  }\n\n  const className = message.type === 'message' ? 'message' : 'error'\n\n  return (\n    <div className={className}>\n      {message.content}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNub, setNewNub] = useState('')\n  const [filterValue, setFilterValue] = useState('')\n  const [message, setMessage] = useState({ type: '', content: '' })\n\n  useEffect(() => {\n    Servers.getAll().then(data => {\n      return setPersons(data)\n    })\n  }, [])\n\n  const addNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const addNewNub = (event) => {\n    setNewNub(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const isHaveSame = persons.every(person => person.name !== newName)\n    if (isHaveSame) {\n      const newPerson = {\n        name: newName,\n        number: newNub\n      }\n\n      Servers.create(newPerson).then(data => {\n        setPersons(persons.concat(data))\n        setMessage({ type: 'message', content: `Add ${newName}` })\n      }).catch(err => setMessage({ type: 'error', content: err.response.data.error }))\n    } else {\n      const result = window.confirm(`${newName}已经在电话簿里了, 是否要更新其电话号码?`)\n      if (result) {\n        const p = persons.find(person => person.name === newName)\n        // const updatePerson = { ...p, number: newNub }\n        Servers.update(p._id, { number: newNub }).then(data => {\n          setPersons(persons.map(person => person._id === p._id ? data : person))\n          setMessage({ type: 'message', content: `${p.name} is updated` })\n        })\n          .catch(err => {\n            setMessage({ type: 'error', content: err.response.data.error })\n          })\n      }\n    }\n    setTimeout(() => {\n      setMessage({ type: '', content: '' })\n    }, 5000)\n    setNewName('')\n    setNewNub('')\n  }\n\n  const changeFilterValue = (event) => {\n    setFilterValue(event.target.value)\n    const filterPersons = persons.filter(person => person.name.toLocaleUpperCase().includes(event.target.value.toLocaleUpperCase()))\n    setPersons(filterPersons)\n  }\n\n  const deletePerson = person => {\n    const result = window.confirm(`确认删除${person.name}`)\n    if (result) {\n      Servers.destroy(person._id).then(() => {\n        setPersons(persons.filter(p => p._id !== person._id))\n      })\n        .catch(err => {\n          setMessage({ type: 'error', content: `Person ${person.name} was already removed from server` })\n          setPersons(persons.filter(p => p._id !== person._id))\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Message message={message} />\n      <Filter filterValue={filterValue} changeFilterValue={changeFilterValue} />\n      <h2>add a new</h2>\n      <PersonForm addPerson={addPerson} newName={newName} addNewName={addNewName} newNub={newNub} addNewNub={addNewNub} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}