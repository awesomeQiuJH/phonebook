{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","res","data","newPerson","post","id","delete","put","Filter","filterValue","changeFilterValue","value","onChange","PersonForm","addPerson","newName","addNewName","newNub","addNewNub","onSubmit","type","Persons","persons","deletePerson","map","person","key","name","number","onClick","Message","message","className","content","App","useState","setPersons","setNewName","setNewNub","setFilterValue","setMessage","useEffect","Servers","event","target","filterPersons","filter","toLocaleUpperCase","includes","preventDefault","every","concat","setTimeout","window","confirm","p","find","updatePerson","catch","err","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9ffbe98.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst create = newPerson => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst destroy = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nexport default { getAll, create, destroy, update }\r\n\r\n","import React, { useState, useEffect } from 'react'\nimport Servers from './services/persons'\nimport './App.css'\n\nconst Filter = ({ filterValue, changeFilterValue }) => (\n  <div>\n    filter shown with<input value={filterValue} onChange={changeFilterValue} />\n  </div>\n)\n\nconst PersonForm = ({ addPerson, newName, addNewName, newNub, addNewNub }) => (\n  <form onSubmit={addPerson}>\n    <div>\n      name: <input value={newName} onChange={addNewName} />\n    </div>\n    <div>\n      number: <input value={newNub} onChange={addNewNub} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nconst Persons = ({ persons, deletePerson }) => (\n  <>\n    {persons.map(person => <p key={person.id}>{person.name} {person.number} <button onClick={() => deletePerson(person)} >delete</button></p>)}\n  </>\n)\n\nconst Message = ({ message }) => {\n  if (!message.type) {\n    return null\n  }\n\n  const className = message.type === 'message' ? 'message' : 'error'\n\n  return (\n    <div className={className}>\n      {message.content}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNub, setNewNub] = useState('')\n  const [filterValue, setFilterValue] = useState('')\n  const [message, setMessage] = useState({ type: '', content: '' })\n\n  useEffect(() => {\n    Servers.getAll().then(data => setPersons(data))\n  }, [])\n\n  const addNewName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const addNewNub = (event) => {\n    setNewNub(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const isHaveSame = persons.every(person => person.name !== newName)\n    if (isHaveSame) {\n      const newPerson = {\n        name: newName,\n        number: newNub\n      }\n\n      Servers.create(newPerson).then(data => {\n        setPersons(persons.concat(data))\n        setMessage({ type: 'message', content: `Add ${newName}` })\n        setTimeout(() => {\n          setMessage({ type: '', content: '' })\n        }, 3000)\n      })\n    } else {\n      const result = window.confirm(`${newName}已经在电话簿里了, 是否要更新其电话号码?`)\n      if (result) {\n        const p = persons.find(person => person.name === newName)\n        const updatePerson = { ...p, number: newNub }\n        Servers.update(p.id, updatePerson).then(data => {\n          setPersons(persons.map(person => person.id === p.id ? data : person))\n          setMessage({ type: 'message', content: `${p.name} is updated` })\n          setTimeout(() => {\n            setMessage({ type: '', content: '' })\n          }, 3000)\n        })\n          .catch(err => {\n            setMessage({ type: 'error', content: `${p.name} update occur error` })\n          })\n      }\n    }\n    setNewName('')\n    setNewNub('')\n  }\n\n  const changeFilterValue = (event) => {\n    setFilterValue(event.target.value)\n    const filterPersons = persons.filter(person => person.name.toLocaleUpperCase().includes(event.target.value.toLocaleUpperCase()))\n    setPersons(filterPersons)\n  }\n\n  const deletePerson = person => {\n    const result = window.confirm(`确认删除${person.name}`)\n    if (result) {\n      Servers.destroy(person.id).then(() => {\n        setPersons(persons.filter(p => p.id !== person.id))\n      })\n        .catch(err => {\n          setMessage({ type: 'error', content: `Person ${person.name} was already removed from server` })\n          setPersons(persons.filter(p => p.id !== person.id))\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Message message={message} />\n      <Filter filterValue={filterValue} changeFilterValue={changeFilterValue} />\n      <h2>add a new</h2>\n      <PersonForm addPerson={addPerson} newName={newName} addNewName={addNewName} newNub={newNub} addNewNub={addNewNub} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}